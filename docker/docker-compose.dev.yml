name: user-votes

services:
  localstack:
    image: localstack/localstack
    container_name: localstack
    ports:
      - "127.0.0.1:4566:4566"
    environment:
      # Keep only whaxt we need; include s3 (cdklocal checks it) and kms for DynamoDB SSE.
      SERVICES: "cloudformation,iam,sts,dynamodb,sns,sqs,s3,kms"
      DEBUG: "1"
      LS_LOG: "info"
      LS_LOG_REQUESTS: "1"
      AWS_DEFAULT_REGION: "us-east-2"
      AWS_REGION: "us-east-2"
      AWS_ACCESS_KEY_ID: "dummy"
      AWS_SECRET_ACCESS_KEY: "dummy"
      LOCALSTACK_SSL: "0"
      SKIP_SSL_CERT_DOWNLOAD: "1"
    healthcheck:
      test: ["CMD-SHELL", "curl -sf -o /dev/null http://localhost:4566/_localstack/health || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 60
      start_period: 25s
    restart: unless-stopped

  infra:
    image: golang:1.25-alpine
    container_name: user-votes-infra-1
    depends_on:
      localstack:
        condition: service_healthy
    working_dir: /work/infra
    volumes:
      - ..:/work
    environment:
      AWS_ACCESS_KEY_ID: "dummy"
      AWS_SECRET_ACCESS_KEY: "dummy"
      AWS_REGION: "us-east-2"
      AWS_DEFAULT_REGION: "us-east-2"
      DEPLOY_SERVICE: "false"
      CDK_DEFAULT_ACCOUNT: "000000000000"
      CDK_DEFAULT_REGION: "us-east-2"
      ENV_TYPE: "local"

      # Point all SDKs at LocalStack (IMPORTANT: include S3 + path-style)
      AWS_ENDPOINT_URL: "http://localstack:4566"
      AWS_ENDPOINT_URL_S3: "http://localstack:4566"
      AWS_S3_FORCE_PATH_STYLE: "true"
      AWS_EC2_METADATA_DISABLED: "true"

      GOTOOLCHAIN: "auto"
    entrypoint: ["/bin/sh","/work/docker/scripts/cdk-local-deploy.sh"]

  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile.app.dev
    container_name: votes-app-dev
    depends_on:
      infra:
        condition: service_completed_successfully
    environment:
      LOG_LEVEL: "DEBUG"
      AWS_REGION: "us-east-2"
      AWS_ACCESS_KEY_ID: "dummy"
      AWS_SECRET_ACCESS_KEY: "dummy"
      # LocalStack endpoints
      AWS_ENDPOINT_URL: "http://localstack:4566"
      AWS_ENDPOINT_URL_DYNAMODB: "http://localstack:4566"
      AWS_ENDPOINT_URL_SNS: "http://localstack:4566"
      AWS_ENDPOINT_URL_SQS: "http://localstack:4566"
      DYNAMO_DB_ENDPOINT: "http://localstack:4566"
      SNS_DB_ENDPOINT: "http://localstack:4566"
      SQS_ENDPOINT: "http://localstack:4566"
      AWS_S3_FORCE_PATH_STYLE: "true"
    ports:
      - "8888:8888"
    volumes:
      - ..:/app
      - go-mod:/go/pkg/mod
      - go-build:/root/.cache/go-build

  worker:
    build:
      context: ..
      dockerfile: docker/Dockerfile.worker.dev
    container_name: votes-workers-dev
    depends_on:
      infra:
        condition: service_completed_successfully
    environment:
      LOG_LEVEL: "DEBUG"
      AWS_REGION: "us-east-2"
      AWS_ACCESS_KEY_ID: "dummy"
      AWS_SECRET_ACCESS_KEY: "dummy"
      # LocalStack endpoints
      AWS_ENDPOINT_URL: "http://localstack:4566"
      AWS_ENDPOINT_URL_DYNAMODB: "http://localstack:4566"
      AWS_ENDPOINT_URL_SNS: "http://localstack:4566"
      AWS_ENDPOINT_URL_SQS: "http://localstack:4566"
      DYNAMO_DB_ENDPOINT: "http://localstack:4566"
      SNS_DB_ENDPOINT: "http://localstack:4566"
      SQS_ENDPOINT: "http://localstack:4566"
      AWS_S3_FORCE_PATH_STYLE: "true"
    volumes:
      - ..:/message_processor
      - go-mod:/go/pkg/mod
      - go-build:/root/.cache/go-build

volumes:
  go-mod:
  go-build:
